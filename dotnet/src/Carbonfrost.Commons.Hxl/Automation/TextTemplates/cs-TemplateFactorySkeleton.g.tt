<#@ template language="C#" inherits="*/ partial class CSTemplateFactoryGenerator : TemplateBase" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System; /*" #>

using System;
using System.Linq;
using Carbonfrost.Commons.Hxl;

[assembly: global::Carbonfrost.Commons.Hxl.HxlTemplateFactoryAttribute(typeof(<#= this.ClassName #>))]

namespace <#= this.Namespace #> {

    [global::System.CodeDom.Compiler.GeneratedCode("<#= this.CodeGenerator #>", "<#= this.CodeGeneratorVersion #>")]
    partial class <#= this.ClassName #> : global::Carbonfrost.Commons.Hxl.HxlTemplateFactory {

        public override HxlTemplate GetTemplate(string name) {
            switch (name) {
<# foreach (var templ in this.Templates) { #>
                case "<#= templ.Name #>":
                    return typeof(global::<#= templ.GeneratedClass #>);
<# } #>
            }

            return null;
        }
    }
}
